uniform vec3 ambientMaterial = vec3 (1,0,0); // red ambient material colour
uniform vec3 diffuseMaterial = vec3 (1,0,0); // red diffuse material colour

// grey environment ambient light and white diffuse light
uniform vec3 ambientLight = vec3 (0.25f, 0.25f, 0.25f);
uniform vec3 diffuseLight = vec3 (1,1,1);

in vec3 surfaceNormal; // normalised surface normal from mesh
uniform vec3 lightDirection; // normalised light direction from light

void main()
{
	vec3 ambient = ambientMaterial * ambientLight ; // ambient light

	// Lambert term, with L reversed to face towards the light
	float lambert = max ( 0.0f, dot ( surfaceNormal, lightDirection ) );

	vec3 diffuse = diffuseMaterial * diffuseLight * lambert ; // diffuse light for one light

	gl_FragColor = vec4 (ambient + diffuse, 1)
}